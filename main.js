// === Mega AI Assistant JS ===

// DOM refs
const chatlog = document.getElementById("chatlog");
const userInput = document.getElementById("userInput");
const userText = document.getElementById("userText");

// 1) Slang normalization
const slangDict = {
  u: "you", r: "are", ur: "your", pls: "please", thx: "thanks",
  idk: "I don't know", imo: "in my opinion", btw: "by the way",
  lol: "laughing out loud", brb: "be right back", wtf: "what the heck",
  omg: "oh my god", lmk: "let me know", smh: "shaking my head"
};
function normalizeInput(input) {
  return input
    .toLowerCase()
    .split(/\s+/)
    .map(word => slangDict[word] || word)
    .join(" ");
}

// 2) Math functions
function factorial(n) {
  if (n < 0) return "Factorial undefined for negative numbers.";
  if (n === 0) return 1;
  let f = 1;
  for (let i = 1; i <= n; i++) f *= i;
  return f;
}
function isPrime(num) {
  if (num <= 1) return false;
  if (num <= 3) return true;
  if (num % 2 === 0 || num % 3 === 0) return false;
  for (let i = 5; i * i <= num; i += 6)
    if (num % i === 0 || num % (i + 2) === 0) return false;
  return true;
}
function fibonacci(n) {
  if (n < 0) return "No negative index in Fibonacci.";
  let a = 0, b = 1;
  for (let i = 0; i < n; i++) {
    [a, b] = [b, a + b];
  }
  return a;
}

// 3) Code explanation (basic, demo)
function explainCode(code) {
  return `This code snippet looks like:\n${code}\n\nSorry, full code analysis not implemented yet.`;
}

// 4) History info (brief snippets)
const historyFacts = {
  civilWar: "The American Civil War (1861–1865) was fought over states' rights and slavery.",
  ww1: "World War I (1914–1918) involved trench warfare and was sparked by the assassination of Archduke Franz Ferdinand.",
  ww2: "World War II (1939–1945) was the deadliest conflict in history, involving Axis and Allied powers.",
  coldWar: "The Cold War (1947–1991) was a geopolitical tension between the Soviet Union and the United States."
};

// 5) Science facts (rocket, physics)
const scienceFacts = {
  rocket: "Rocket science involves propulsion principles, Newton's third law, and advanced fluid dynamics.",
  physics: "Physics studies matter, energy, forces, and the fundamental laws of the universe."
};

// 6) Catholic faith basics
const catholicFaith = {
  prayer: "The Lord's Prayer is central: 'Our Father, who art in heaven...'",
  sacraments: "There are seven sacraments: Baptism, Eucharist, Confirmation, Reconciliation, Anointing of the Sick, Marriage, Holy Orders.",
  pope: "The Pope is the spiritual leader of the worldwide Catholic Church."
};

// 7) Spanish translations (basic dictionary)
const spanishDict = {
  hello: "hola",
  goodbye: "adiós",
  please: "por favor",
  thank: "gracias",
  yes: "sí",
  no: "no",
  friend: "amigo",
  love: "amor"
};
function translateToSpanish(phrase) {
  return phrase
    .toLowerCase()
    .split(/\s+/)
    .map(word => spanishDict[word] || `[${word}]`)
    .join(" ");
}

// 8) Music theory basics
const musicTheory = {
  scales: "Common scales: Major, Minor, Pentatonic, Blues.",
  notes: "The musical alphabet: A B C D E F G.",
  chords: "Chords combine notes: Major (happy), Minor (sad), Seventh (jazzy)."
};

// 9) Video games info (developers, platforms, mods)
const videoGames = {
  steam: "Steam is a popular digital distribution platform for PC games by Valve.",
  epicGames: "Epic Games Store is another platform with exclusive titles and free games.",
  mods: "Mods are player-made game modifications adding content or changing gameplay.",
  developers: "Famous devs include Nintendo, Rockstar, Blizzard, Bethesda."
};

// 10) Ham radio / FCC basics
const hamRadio = {
  license: "Amateur radio requires FCC licensing, typically Technician, General, Extra classes.",
  freqBands: "Common bands: 2m, 70cm, HF bands like 40m, 20m, etc.",
  callSigns: "Call signs identify operators; format varies by country."
};

// 11) Jokes & pranks
const jokes = [
  "Why do programmers prefer dark mode? Because light attracts bugs!",
  "There are 10 types of people: those who understand binary and those who don't.",
  "Why did the scarecrow win an award? Because he was outstanding in his field!",
  "Why was the math book sad? Because it had too many problems."
];
function getRandomJoke() {
  return jokes[Math.floor(Math.random() * jokes.length)];
}

// 12) AI detection (very basic heuristic)
function detectAIText(text) {
  const patterns = [
    /As an AI language model/i,
    /I cannot browse the internet/i,
    /I'm designed to/i
  ];
  return patterns.some(pat => pat.test(text)) ? "This text looks like it was generated by AI." : "This text likely was not generated by AI.";
}

// 13) Homework / writing help (basic)
function homeworkHelp(topic) {
  if (topic.includes("essay")) return "To write an essay, start with an intro, followed by body paragraphs with arguments, then a conclusion.";
  if (topic.includes("math")) return "For math problems, carefully identify the formulas you need and show your work step by step.";
  if (topic.includes("science")) return "Use the scientific method: question, hypothesis, experiment, results, conclusion.";
  return "Can you specify the subject you need help with?";
}

// === MAIN RESPONDER ===
function generateReply(input) {
  const normalized = normalizeInput(input);

  // Greetings
  if (/(hello|hi|hey|greetings)/i.test(normalized)) return "Hello! How can I assist you today?";

  // Help
  if (normalized.includes("help")) {
    return `I can help you with:
- Explaining code snippets
- Math calculations (factorial, prime, fibonacci)
- History facts (Civil War, WWI, WWII)
- Science and rocket science
- Catholic faith basics
- Spanish translations
- Music theory
- Video game info (Steam, mods, devs)
- Ham radio and FCC info
- Jokes and pranks
- AI text detection
- Homework help
Ask me anything!`;
  }

  // Jokes
  if (normalized.includes("joke")) return getRandomJoke();

  // Factorial
  let factMatch = normalized.match(/factorial of (\d+)/);
  if (factMatch) {
    const num = parseInt(factMatch[1]);
    return `Factorial of ${num} is ${factorial(num)}.`;
  }

  // Prime
  let primeMatch = normalized.match(/is (\d+) prime/);
  if (primeMatch) {
    const num = parseInt(primeMatch[1]);
    return isPrime(num) ? `${num} is a prime number.` : `${num} is not prime.`;
  }

  // Fibonacci
  let fibMatch = normalized.match(/fibonacci (?:number )?(\d+)/);
  if (fibMatch) {
    const num = parseInt(fibMatch[1]);
    return `Fibonacci number #${num} is ${fibonacci(num)}.`;
  }

  // Code explanation
  if (normalized.startsWith("explain code:") || normalized.startsWith("explain this code:")) {
    const code = input.substring(input.indexOf(":") + 1).trim();
    return explainCode(code);
  }

  // History facts
  if (/civil war/.test(normalized)) return historyFacts.civilWar;
  if (/world war i|ww1/.test(normalized)) return historyFacts.ww1;
  if (/world war ii|ww2/.test(normalized)) return historyFacts.ww2;
  if (/cold war/.test(normalized)) return historyFacts.coldWar;

  // Science
  if (/rocket science/.test(normalized)) return scienceFacts.rocket;
  if (/physics/.test(normalized)) return scienceFacts.physics;

  // Catholic faith
  if (/catholic prayer/.test(normalized)) return catholicFaith.prayer;
  if (/catholic sacraments/.test(normalized)) return catholicFaith.sacraments;
  if (/pope/.test(normalized)) return catholicFaith.pope;

  // Spanish translation
  if (/translate (.+) to spanish/.test(normalized)) {
    const phrase = normalized.match(/translate (.+) to spanish/)[1];
    return translateToSpanish(phrase);
  }

  // Music theory
  if (/music theory/.test(normalized)) return musicTheory.scales + " " + musicTheory.notes + " " + musicTheory.chords;

  // Video games info
  if (/steam/.test(normalized)) return videoGames.steam;
  if (/epic games/.test(normalized)) return videoGames.epicGames;
  if (/mod(s)?/.test(normalized)) return videoGames.mods;
  if (/video game developer/.test(normalized)) return videoGames.developers;

  // Ham radio / FCC
  if (/ham radio/.test(normalized)) return hamRadio.license + " " + hamRadio.freqBands + " " + hamRadio.callSigns;

  // AI detection
  if (/detect ai/.test(normalized)) return detectAIText(input);

  // Homework
  if (/homework/.test(normalized) || /essay|math|science/.test(normalized)) return homeworkHelp(normalized);

  // If no match
  return "Sorry, I didn't understand that. Try typing 'help' for what I can do or ask for a joke!";
}

// === UI Interaction ===
function addMessage(text, sender = "bot") {
  const div = document.createElement("div");
  div.classList.add("msg", sender);
  if(sender === "bot") {
    // Render markdown for bot messages
    div.innerHTML = marked.parse(text);
  } else {
    // Escape HTML for user messages
    div.textContent = text;
  }
  chatlog.appendChild(div);
  chatlog.scrollTop = chatlog.scrollHeight;
}

userInput.addEventListener("submit", e => {
  e.preventDefault();
  const query = userText.value.trim();
  if (!query) return;
  addMessage(query, "user");

  userText.value = "";
  userText.disabled = true;

  // Show "bot is typing..." placeholder
  addMessage("...", "bot");

  setTimeout(() => {
    // Remove "..." message
    const lastBotMsg = chatlog.querySelector(".msg.bot:last-child");
    if(lastBotMsg && lastBotMsg.textContent === "...") {
      chatlog.removeChild(lastBotMsg);
    }

    const reply = generateReply(query);
    addMessage(reply, "bot");
    userText.disabled = false;
    userText.focus();
  }, 800);
});

// Initial greeting
addMessage("Hi! I'm your mega AI assistant. Type 'help' to see what I can do.");
